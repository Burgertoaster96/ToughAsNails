buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'idea'
apply plugin: 'org.spongepowered.mixin'

repositories { mavenLocal() }

group = "com.github.glitchfiend"
archivesBaseName = project.mod_name

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

version = "${minecraft_version}-${mod_version}.${System.getenv().BUILD_NUMBER}"

minecraft {
    mappings channel: 'official', version: minecraft_version

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client = {
            workingDirectory = project.file("run").canonicalPath
            args "-mixin.config=${mod_id}.mixins.json", "-mixin.config=${mod_id}.mixins.json"
            source sourceSets.main
        }
        server = {
            workingDirectory = project.file("run").canonicalPath
            args "-mixin.config=${mod_id}.mixins.json", "-mixin.config=${mod_id}.mixins.json"
            source sourceSets.main
        }
    }
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xmaxerrs" << "10000"
        }
    }
}

// configure  the source folders
sourceSets {
    main {
        java {
            srcDir "src/main/java"
            srcDir "public/src/main/java"
        }
        resources {
            srcDir "src/main/resources"
            srcDir "public/src/main/resources"
        }
    }
}

processResources {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

jar {
    manifest {
        attributes([
            "Specification-Title": project.mod_id,
            "Specification-Vendor": project.mod_name,
            "Specification-Version": "1.1",
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            "Implementation-Vendor" :"${mod_id}",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        ])
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:' + minecraft_version + '-' + forge_version
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    implementation files('libs/Serene+Seasons-1.18.2-7.0.0.13-deobf.jar')
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"
    config "${mod_id}.mixins.json"
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task apiJar(type: Jar) {
    from(sourceSets.main.allJava) {
        include "${mod_id}/api/**"
    }
    from (sourceSets.main.output) {
        include 'LICENSE.txt'
        include "${mod_id}/api/**"
    }

    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    classifier = 'api'
}

def changelog_file = rootProject.file("build/${mod_name}-${version}-changelog.txt")

curseforge {
    if (project.hasProperty('curseApiKey')) {
        apiKey = project.getProperty('curseApiKey')
        project {
            id = '246391'

            if (changelog_file.exists()) {
                changelog = changelog_file
            }

            releaseType = 'beta'
            addGameVersion minecraft_version

            mainArtifact(jar) {
                displayName = "${mod_name} ${version}"
            }

            addArtifact deobfJar
            addArtifact apiJar
        }
    }
}

artifacts {
    if (changelog_file.exists()) {
        archives changelog_file
    }
    archives jar
    archives deobfJar
    archives apiJar
}
